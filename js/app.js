// Generated by CoffeeScript 1.10.0
(function() {
  var askDelOther, connect, connectSession, delOther, disconnect, fail, failNoLogout, favoriteSession, hideLoading, improvePosts, loadPost, loadPosts, login, loginSession, postsSession, resetHomeButton, showLoading, showPost, showPostContent;

  resetHomeButton = function() {
    $('#home').unbind('click');
    $('#home').children('small').remove();
    return $('#home').children('i').remove();
  };

  disconnect = function() {
    $.ajax({
      url: window.url + '/connection',
      type: 'DELETE',
      data: {
        token: window.token
      },
      success: function(data) {
        return toastr.success(data.status);
      }
    }).always(function() {
      return window.token = null;
    });
    resetHomeButton();
    $('#logout-button').addClass('sr-only');
    localStorage.removeItem('auto-login');
    return connectSession();
  };

  showLoading = function() {
    window.spinner = new Spinner().spin();
    $('#loading').html(window.spinner.el);
    return $('#loading').modal('show');
  };

  hideLoading = function() {
    window.spinner.stop();
    return $('#loading').modal('hide');
  };

  fail = function(xhr, status, data, logout) {
    var errMsg, error;
    if (logout == null) {
      logout = true;
    }
    hideLoading();
    try {
      errMsg = $.parseJSON(xhr.responseText);
      toastr.error(errMsg.error, data);
    } catch (error) {
      toastr.error(data);
    }
    if (logout) {
      return disconnect();
    }
  };

  failNoLogout = function(xhr, status, data) {
    return fail(xhr, status, data, false);
  };

  showPostContent = function(content, last) {
    return $.get('html/push.html', function(pushHtml) {
      var container, img, imgs, j, k, len, len1, num, postSpinner, row, template;
      container = $('#post-content');
      for (j = 0, len = content.length; j < len; j++) {
        row = content[j];
        imgs = [];
        if (typeof row === 'string') {
          container.append(row.autoLink({
            target: '_blank',
            callback: function(url) {
              if (/\.(gif|png|jpe?g)$/i.test(url)) {
                imgs.push(url);
              }
              return false;
            }
          }) + '\n');
        } else {
          num = window.pushNum;
          container.append(pushHtml.replace('{id}', num));
          template = container.children('#' + num);
          template.find('.push-tag').text(row.tag);
          switch (row.tag) {
            case '推':
              template.find('.push-tag').addClass('push-tag-push');
              break;
            case '噓':
              template.find('.push-tag').addClass('push-tag-boo');
              break;
            default:
              template.find('.push-tag').addClass('push-tag-arrow');
          }
          template.find('.push-author').text(row.author);
          template.find('.push-time').text(row.time);
          template.find('.push-content').html(row.content.autoLink({
            target: '_blank',
            callback: function(url) {
              if (/\.(gif|png|jpe?g)$/i.test(url)) {
                imgs.push(url);
              }
              return false;
            }
          }));
          window.pushNum += 1;
        }
        for (k = 0, len1 = imgs.length; k < len1; k++) {
          img = imgs[k];
          container.append('<img src="' + img + '" />');
        }
      }
      if (!last) {
        $('#post-content').append('<div id="loading-post"></div>');
        postSpinner = new Spinner().spin();
        $('#loading-post').html(postSpinner.el);
        return $('#loading-post').one('inview', function() {
          return loadPost(function() {
            postSpinner.stop();
            return $('#loading-post').remove();
          });
        });
      }
    }, 'html');
  };

  loadPost = function(preDone) {
    return $.getJSON(window.url + '/post', {
      token: window.token
    }, function(data) {
      if (typeof preDone === 'function') {
        preDone();
      }
      return showPostContent(data.post.content, data.post.end);
    }).fail(failNoLogout);
  };

  showPost = function(num, cachePosts) {
    var post;
    if (cachePosts == null) {
      cachePosts = true;
    }
    post = window.posts[num];
    if (post.author === '-') {
      return;
    }
    $('#' + num).addClass('post-read');
    switch (post.status) {
      case '+':
      case '~':
        post.status = ' ';
        break;
      case 'S':
        post.status = 's';
        break;
      case 'M':
      case '=':
        post.status = 'm';
    }
    $('#' + num).find('.post-status').text(post.status);
    showLoading();
    return $.getJSON(window.url + '/post', {
      token: window.token,
      id: post.id
    }, function(data) {
      return $.get('html/post-top.html', function(postTopHtml) {
        post = data.post;
        if (cachePosts) {
          $('#loading-posts').remove();
          window.postsHTML = $('#container').html();
          window.postsScrollY = window.scrollY;
          scrollTo(0, 0);
          $('#home').unbind('click');
          $('#home').click(function(event) {
            event.preventDefault();
            $('#container').html(window.postsHTML);
            window.postsHTML = null;
            scrollTo(0, window.postsScrollY);
            $('#home').unbind('click');
            $(this).click(function(event) {
              event.preventDefault();
              resetHomeButton();
              return favoriteSession();
            });
            return improvePosts();
          });
        }
        $('#container').html('<div id="post-content"></div>');
        $('#post-content').html(postTopHtml);
        $('#article-title').text(post.title);
        $('#article-author').text(post.author);
        if (post.time) {
          $('#article-time').text(post.time);
        } else {
          $('#article-time').remove();
        }
        window.pushNum = 0;
        showPostContent(post.content, post.end);
        hideLoading();
        return $.get('html/new-push.html', function(newPushHtml) {
          var pushTag;
          pushTag = 'push-tag-push';
          $('#container').append(newPushHtml);
          $('#new-push-tag select').change(function() {
            $(this).removeClass(pushTag);
            pushTag = $(this).children('option:selected').attr('class');
            $(this).addClass(pushTag);
            return $.material.init();
          });
          return $('#new-push-form').submit(function(event) {
            event.preventDefault();
            showLoading();
            return $.post(window.url + '/push', {
              token: window.token,
              id: post.id,
              tag: parseInt($('#new-push-tag select').val()),
              content: $('#new-push-content input').val()
            }, function(data) {
              return showPost(num, false);
            }).fail(failNoLogout);
          });
        }, 'html');
      }, 'html');
    }).fail(failNoLogout);
  };

  improvePosts = function() {
    var postsSpinner;
    $('.post').unbind('click');
    $('.post').click(function(event) {
      var num;
      event.preventDefault();
      num = $(this).attr('id');
      return showPost(num);
    });
    $('#btn-save-post').click(function() {
      var content, title;
      title = $('#new-post-title').val();
      content = $('#new-post-content').val();
      $('#new-post-title').val('');
      $('#new-post-content').val('');
      $('#new-post-modal').modal('hide');
      if (title === '') {
        return;
      }
      return $.post(window.url + '/post', {
        token: window.token,
        title: title,
        content: content
      }, function(data) {
        return postsSession();
      }, 'json').fail(failNoLogout);
    });
    $('#new-post-modal').on('hidden.bs.modal', function() {
      return $('#home').focus();
    });
    $('#container').append('<div id="loading-posts"></div>');
    postsSpinner = new Spinner().spin();
    $('#loading-posts').html(postsSpinner.el);
    $('#loading-posts').one('inview', function() {
      return loadPosts(function() {
        postsSpinner.stop();
        return $('#loading-posts').remove();
      });
    });
    return $.material.init();
  };

  loadPosts = function(preDone, postDone) {
    return $.getJSON(window.url + '/posts', {
      token: window.token
    }, function(data) {
      var container;
      container = $('#posts');
      window.posts = window.posts.concat(data.posts);
      return $.get('html/post.html', function(postHTML) {
        if (typeof preDone === 'function') {
          preDone();
        }
        $.each(data.posts, function(i, post) {
          var num, template;
          num = window.postNum + i;
          container.append(postHTML.replace('{id}', num));
          template = container.children('#' + num);
          if (!(post.status === '+' || post.status === 'M' || post.status === 'S')) {
            template.addClass('post-read');
          }
          template.find('.post-date').text(post.date);
          if (parseInt(post.like) < 10) {
            template.find('.post-like').addClass('post-like-digit');
          } else if (parseInt(post.like)) {
            template.find('.post-like').addClass('post-like-two-digits');
          } else if (post.like === '爆') {
            template.find('.post-like').addClass('post-like-bomb');
          } else {
            template.find('.post-like').addClass('post-like-xx');
          }
          template.find('.post-like').text(post.like);
          template.find('.post-status').text(post.status);
          template.find('.post-author').text(post.author);
          if (post.source !== '□') {
            template.find('.post-title').text(post.source + ' ');
          }
          template.find('.post-title').append(post.title);
          return container.append('<hr />');
        });
        window.postNum = window.posts.length;
        improvePosts();
        if (typeof postDone === 'function') {
          return postDone();
        }
      }, 'html');
    }).fail(failNoLogout);
  };

  postsSession = function() {
    showLoading();
    $('#enter-board-button').addClass('sr-only');
    return $.ajax({
      url: window.url + '/board',
      type: 'PUT',
      dataType: 'json',
      data: {
        token: window.token,
        name: window.board
      }
    }).done(function(data) {
      resetHomeButton();
      window.board = data.board;
      $('#home').prepend('<i class="material-icons">arrow_back</i>');
      $('#home').append('<small>' + data.name + '</small>').click(function(event) {
        event.preventDefault();
        resetHomeButton();
        return favoriteSession();
      });
      window.posts = [];
      window.postNum = 0;
      $('#container').html('<div id="posts"></div>');
      $.get('html/new-post.html', function(newPostHtml) {
        return $('#container').prepend(newPostHtml);
      }, 'html');
      return loadPosts(null, hideLoading);
    }).fail(failNoLogout);
  };

  favoriteSession = function() {
    showLoading();
    return $.getJSON(window.url + '/boards', {
      token: window.token
    }, function(data) {
      var container;
      resetHomeButton();
      $('#home').append(' <small>我的最愛</small>');
      container = $('#container');
      container.empty();
      window.boards = data.boards;
      return $.get('html/board.html', function(boardHTML) {
        $.each(window.boards, function(i, board) {
          var template;
          container.append(boardHTML.replace('{id}', i));
          template = container.children('#' + i);
          template.find('.board-en-name').text(board.en_name);
          if (board.unread) {
            template.find('.board-unread').removeClass('sr-only');
          }
          template.find('.board-zh-name').text(board.zh_name);
          return template.find('.board-popularity').text(board.popularity);
        });
        $('.board').click(function() {
          var num;
          num = $(this).attr('id');
          window.board = window.boards[num].en_name;
          return postsSession();
        });
        return $.get('html/enter-board.html', function(enterHTML) {
          container.append(enterHTML);
          $('#enter-board-button').removeClass('sr-only');
          $('#enter-board-button').click(function() {
            $('#menu').modal('hide');
            $('#enter-modal').modal('show');
            return $('input#name').focus();
          });
          $('#enter-board').submit(function(event) {
            event.preventDefault();
            window.board = $('input#name').val();
            $('#enter-modal').modal('hide');
            return postsSession();
          });
          hideLoading();
          return $.material.init();
        }, 'html');
      }, 'html');
    }).fail(fail);
  };

  delOther = function(del) {
    $('#ask-del-other').modal('hide');
    showLoading();
    return $.ajax({
      url: window.url + '/other',
      type: 'DELETE',
      dataType: 'json',
      data: {
        token: window.token,
        del: del
      }
    }).done(function() {
      hideLoading();
      return favoriteSession();
    }).fail(fail);
  };

  askDelOther = function() {
    $('#keep-other').click(function() {
      return delOther(false);
    });
    $('#del-other').click(function() {
      return delOther(true);
    });
    return $('#ask-del-other').modal('show');
  };

  login = function(account, password) {
    showLoading();
    return $.ajax({
      url: window.url + '/login',
      type: 'PUT',
      dataType: 'json',
      data: {
        token: window.token,
        account: account,
        password: password
      }
    }).done(function(data) {
      hideLoading();
      $('#logout-button').removeClass('sr-only');
      toastr.success('Logged in');
      if (data.status === 'Other Online') {
        return askDelOther();
      } else {
        return favoriteSession();
      }
    }).fail(function(xhr, status, data) {
      localStorage.removeItem('auto-login');
      return fail(xhr, status, data);
    });
  };

  loginSession = function(allowAuto) {
    var account, autoLogin, password;
    if (allowAuto == null) {
      allowAuto = true;
    }
    autoLogin = localStorage.getItem('auto-login') === 'true';
    account = localStorage.getItem('account');
    password = localStorage.getItem('password');
    return $('#container').load('html/login-form.html', function() {
      $('#home').prepend('<i class="material-icons">arrow_back</i>').click(function(event) {
        event.preventDefault();
        return disconnect();
      });
      $('#account').val(account);
      $('#password').val(password);
      if (autoLogin) {
        $('#auto-login').attr('checked', 'checked');
      }
      $.material.init();
      if (allowAuto && autoLogin) {
        $(this).find('button[type=submit]').button('loading');
        return login(account, password);
      } else {
        return $('#login').submit(function(event) {
          event.preventDefault();
          $(this).find('button[type=submit]').button('loading');
          showLoading();
          account = $('input#account').val();
          password = $('input#password').val();
          autoLogin = $('input#auto-login').prop('checked');
          localStorage.setItem('auto-login', autoLogin);
          if (autoLogin) {
            localStorage.setItem('account', account);
            localStorage.setItem('password', password);
          } else {
            localStorage.removeItem('account');
            localStorage.removeItem('password');
          }
          return login(account, password);
        });
      }
    });
  };

  connect = function() {
    return $.post(window.url + '/connection', function(data, status) {
      window.token = data.token;
      toastr.success(data.status);
      return loginSession();
    }, 'json').fail(function(xhr, status, data) {
      $('#connect').find('button[type=submit]').button('reset');
      return fail(xhr, status, data);
    }).always(function() {
      return hideLoading();
    });
  };

  connectSession = function() {
    return $('#container').load('html/connect-form.html', function() {
      $('input#graptt-url').val(localStorage.getItem('graptt-url'));
      if (localStorage.getItem('remember-url') === 'true') {
        $('input#remember-url').attr('checked', 'checked');
      }
      $('#connect').submit(function(event) {
        var remember;
        event.preventDefault();
        $(this).find('button[type=submit]').button('loading');
        showLoading();
        window.url = $('input#graptt-url').val();
        remember = $('input#remember-url').prop('checked');
        localStorage.setItem('remember-url', remember);
        if (remember) {
          localStorage.setItem('graptt-url', window.url);
        } else {
          localStorage.removeItem('graptt-url');
        }
        return connect();
      });
      return $.material.init();
    });
  };

  $(document).ready(function() {
    toastr.options.positionClass = 'toast-bottom-center';
    $.ajaxSetup({
      crossDomain: true,
      xhr: function() {
        return new XMLHttpRequest({
          mozAnon: true,
          mozSystem: true
        });
      },
      xhrFields: {
        withCredentials: true
      }
    });
    $('#logout-button').click(disconnect);
    return connectSession();
  });

}).call(this);
